远程操作的第一步，通常是从远程主机克隆一个版本库
git clone <版本库的网址>
$ git clone <版本库的网址> <本地目录名>
克隆的时候,指定远程主机叫做jQuery
$ git clone -o jQuery https://github.com/jquery/jquery.git

git remote命令就用于管理主机名
$ git remote列出所有远程主机
$ git remote -v可以参看远程主机的网址
查看该主机的详细信息
$ git remote show <主机名>
$ git remote add <主机名> <网址>命令用于添加远程主机
$ git remote rm <主机名>命令用于删除远程主机
$ git remote rename <原主机名> <新主机名>命令用于远程主机的改名

一旦远程主机的版本库有了更新（Git术语叫做commit），需要将这些更新取回本地
$ git fetch <远程主机名>远程主机的更新，全部取回本地
$ git fetch <远程主机名> <分支名>取回所有分支（branch）的更新
$ git fetch origin master比如，取回origin主机的master分支

$ git branch -r可以用来查看远程分支
$ git branch -a查看所有分支
上面命令表示，本地主机的当前分支是master，远程分支是origin/master
$ git checkout -b newBrach origin/master上面命令表示，在origin/master的基础上，创建一个新分支
$ git merge origin/master
$ git rebase origin/master也可以使用git merge命令或者git rebase命令，在本地分支上合并远程分支
$ git pull <远程主机名> <远程分支名>:<本地分支名>
$ git pull origin next:master比如，取回origin主机的next分支，与本地的master分支合并，需要写成下面这样
$ git pull origin next如果远程分支是与当前分支合并
$ git fetch origin
$ git merge origin/next实质上，这等同于先做git fetch，再做git merge
git branch --set-upstream master origin/next上面命令指定master分支追踪origin/next分支
$ git pull origin如果当前分支与远程分支存在追踪关系，git pull就可以省略远程分支名
$ git pull如果当前分支只有一个追踪分支，连远程主机名都可以省略
$ git pull --rebase <远程主机名> <远程分支名>:<本地分支名>如果合并需要采用rebase模式，可以使用--rebase选项
$ git pull -p
# 等同于下面的命令
$ git fetch --prune origin 
$ git fetch -p加上参数 -p 就会在本地删除远程已经删除的分支
$ git push <远程主机名> <本地分支名>:<远程分支名>命令用于将本地分支的更新，推送到远程主机
$ git push origin master如果省略远程分支名，则表示将本地分支推送与之存在"追踪关系"的远程分支（通常两者同名），如果该远程分支不存在，则会被新建
$ git push origin :master
# 等同于
$ git push origin --delete master如果省略本地分支名，则表示删除指定的远程分支，因为这等同于推送一个空的本地分支到远程分支
$ git push origin将当前分支推送到origin主机的对应分支
$ git push如果当前分支只有一个追踪分支，那么主机名都可以省略
$ git push -u origin master如果当前分支与多个主机存在追踪关系，则可以使用-u选项指定一个默认主机
$ git config --global push.default matching
# 或者
$ git config --global push.default simple不带任何参数的git push，默认只推送当前分支，这叫做simple方式。此外，还有一种matching方式，会推送所有有对应的远程分支的本地分支。Git 2.0版本之前，默认采用matching方法，现在改为默认采用simple方式。如果要修改这个设置，可以采用git config命令
$ git push --all origin上面命令表示，将所有本地分支都推送到origin主机
$ git push --force origin 如果远程主机的版本比本地版本更新，推送时Git会报错，可以使用--force选项
$ git push origin --tags不会推送标签（tag），除非使用--tags选项
$ git remote add origin git@github.com:yourName/yourRepo.git  添加远程地址









